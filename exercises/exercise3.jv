valuetype onlypositive oftype integer {
    constraints: [rangeconstraint];
}

constraint rangeconstraint oftype RangeConstraint {
    lowerBound: 0;
    lowerBoundInclusive: true;
}

valuetype regex_1 oftype text {
    constraints: [regex_constraint_1];
}

constraint regex_constraint_1 oftype RegexConstraint {
    regex: /\b(Januar|Februar|MÃ¤rz|April|Mai|Juni|Juli|August|September|Oktober|November|Dezember)\b/;
}

valuetype regex_2 oftype text {
    constraints: [regex_constraint_2];
}

constraint regex_constraint_2 oftype RegexConstraint {
    regex: /^NST7-[0-9A-Z]{3}$/;
}

pipeline goodstransportpipeline {
    block DataExtractor oftype HttpExtractor { 
        url: 'https://www-genesis.destatis.de/genesis/downloads/00/tables/46131-0014_00.csv'; 
    }

    block GoodsTextFileInterpreter oftype TextFileInterpreter {
        encoding: 'latin3';
    }

    block GoodsCSVInterpreter oftype CSVInterpreter {
        delimiter: ';';
        enclosingEscape: '"'; 
    }

    block RowDeleter oftype RowDeleter {
        delete: [row 1, row 2, row 3, row 4, row 5, row 6, row 7, row 8, row 41338, row 41339];
    }

    block HeaderSequenceWriter1 oftype CellWriter {
        at: range A1:E1;
        write: ['year', 'month', 'goods_id', 'goods_name', 'goods_source'];
    }

    block HeaderSequenceWriter2 oftype CellWriter {
        at: range AT1:AU1;
        write: ['abroad', 'total'];
    }

    block RowFilter oftype RowFilter {
        rules: [
            'year' is not null,
            'month' is not null,
            'goods_id' is not null,
            'goods_name' is not null,
            'goods_source' is not null,
            'abroad' is not null,
            'total' is not null,
            'year' matches /^\d+$/,
            'month' matches /\b(Januar|Februar|MÃ¤rz|April|Mai|Juni|Juli|August|September|Oktober|November|Dezember)\b/,
            'goods_id' matches /^NST7-[0-9A-Z]{3}$/,
            'abroad' matches /^\d+$/,
            'total' matches /^\d+$/
        ];
    }

    block GoodsTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            'year' oftype onlypositive,
            'month' oftype regex_1,
            'goods_id' oftype regex_2,
            'goods_name' oftype text,
            'goods_source' oftype text,
            'abroad' oftype onlypositive,
            'total' oftype onlypositive,
        ];
    }

    block DatabaseLoader oftype SQLiteLoader {
        table: "goods";
        file: './goodsTransportedByTrain.sqlite';
    }

    DataExtractor
    -> GoodsTextFileInterpreter
    -> GoodsCSVInterpreter
    -> RowDeleter
    -> HeaderSequenceWriter1
    -> HeaderSequenceWriter2
    -> RowFilter
    -> GoodsTableInterpreter
    -> DatabaseLoader;
}
