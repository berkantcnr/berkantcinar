pipeline Exercise4Pipeline {

    block DataExtractor oftype HttpExtractor {
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }

    block DataZipInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block CSVFilePicker oftype FilePicker {
        path: "/data.csv";
    }

    block CSVFileInterpreter oftype TextFileInterpreter {
        encoding: "latin3";
    }

    block CSVInterpreter oftype CSVInterpreter {
        delimiter: ";";
    }
    block ExtraColumnDeleter oftype ColumnDeleter {
        delete: [column F, column G, column H, column I];
    }
    block RenameColumns oftype CellWriter {
        at: range A1:F1;
        write: ["id", "producer", "model", "month", "temperature", "battery_temperature"];
    }

    block DataTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "id" oftype OnlyPositiveIntegers,
            "producer" oftype text,
            "model" oftype text,
            "month" oftype Months,
            "temperature" oftype decimal,
            "battery_temperature" oftype decimal,
        ];
    }
    valuetype OnlyPositiveIntegers oftype integer {
        constraints: [
            IdRule,
	];
}
    constraint IdRule on integer:
        value > 0;

    constraint MonthRule on integer:
        value >= 1 and value <= 12;
    
    valuetype Months oftype integer {
        constraints: [MonthRule];
    }

    transform CelsiusToFahrenheit {
        from tempCelsius oftype decimal;
        to tempFahrenheit oftype decimal;
        tempFahrenheit: (tempCelsius * 9/5) + 32;
    }
   
    block TempTransformer oftype TableTransformer {
        inputColumns: ['temperature'];
        outputColumn: 'temperature';
        use: CelsiusToFahrenheit;
    }

    block BatteryTempTransformer oftype TableTransformer {
        inputColumns: ['battery_temperature'];
        outputColumn: 'battery_temperature';
        use: CelsiusToFahrenheit;
    }

    block DataLoader oftype SQLiteLoader {
        table: 'temperatures';
        file: 'temperatures.sqlite';
    }

    DataExtractor
        -> DataZipInterpreter
        -> CSVFilePicker
        -> CSVFileInterpreter
        -> CSVInterpreter
        -> ExtraColumnDeleter
        -> RenameColumns
        -> DataTableInterpreter
        -> TempTransformer
        -> BatteryTempTransformer
        -> DataLoader;
}
