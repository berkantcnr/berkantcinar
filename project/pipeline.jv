pipeline WorldPopulationAirPollutionPipeline {
    PopulationExtractor -> PopulationTextFileInterpreter;
    AirPollutionExtractor -> AirPollutionTextFileInterpreter;

    PopulationTextFileInterpreter
        -> PopulationCSVInterpreter
        -> PopulationTableInterpreter
        -> PopulationFilterLatestYear
        -> PopulationLoader;

    AirPollutionTextFileInterpreter
        -> AirPollutionCSVInterpreter
        -> AirPollutionTableInterpreter
        -> AirPollutionAggregateByCountry
        -> AirPollutionLoader;

    // Extract Population Data from URL
    block PopulationExtractor oftype HttpExtractor {
        url: "https://www.kaggle.com/datasets/iamsouravbanerjee/world-population-dataset/download";
    }

    // Extract Air Pollution Data from URL
    block AirPollutionExtractor oftype HttpExtractor {
        url: "https://www.kaggle.com/datasets/hasibalmuzdadid/global-air-pollution-dataset/download";
    }

    block PopulationTextFileInterpreter oftype TextFileInterpreter { }
    block AirPollutionTextFileInterpreter oftype TextFileInterpreter { }

    block PopulationCSVInterpreter oftype CSVInterpreter {
        delimiter: ",";
    }

    block AirPollutionCSVInterpreter oftype CSVInterpreter {
        delimiter: ",";
    }

    // Population Data Table Format
    block PopulationTableInterpreter oftype TableInterpreter {
        header: true,
        columns: [
            "Country" oftype text,
            "Year" oftype integer,
            "Population" oftype integer
        ];
    }

    // Air Pollution Data Table Format
    block AirPollutionTableInterpreter oftype TableInterpreter {
        header: true,
        columns: [
            "Country" oftype text,
            "City" oftype text,
            "AQI_Value" oftype decimal,
            "CO_AQI_Value" oftype decimal,
            "Ozone_AQI_Value" oftype decimal,
            "NO2_AQI_Value" oftype decimal,
            "PM2.5_AQI_Value" oftype decimal
        ];
    }

    // Getting only latest data. 
    block PopulationFilterLatestYear oftype RowFilter {
        condition: "Year == 2022";
    }

    // Some countries have multiple data. I get the mean of the countries values because I only need one value for each country to analyze. 
    block AirPollutionAggregateByCountry oftype Aggregator {
        group_by: "Country";
        aggregations: {
            "AQI_Value": mean,
            "CO_AQI_Value": mean,
            "Ozone_AQI_Value": mean,
            "NO2_AQI_Value": mean,
            "PM2.5_AQI_Value": mean
        };
    }
   
    block PopulationLoader oftype SQLiteLoader {
        table: "population";
        file: "data/world_population_air_pollution.db";
    }

    block AirPollutionLoader oftype SQLiteLoader {
        table: "air_pollution";
        file: "data/world_population_air_pollution.db";
    }
}
